hashable
An object is hashable if it has a hash value which never changes during its lifetime(it needs a __hash__() method).
And can be compared to other objects(it needs an __eq__() or __cmp__() method). 
Hashable objects which compare equal must have the same hash value.

Hashability makes an object usable as a dictionary key and a set memeber, because these data structures use the hash value internally.

All of Python's immutable built-in objects are hashable, while no mutable containers(such as lists or dictionaries) are.
Objects which are instances of user-defined classes are hashable by default; they all compare unequal(except with themselves), 
and their hash values is derived from their id().


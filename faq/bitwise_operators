## Reference
# http://www.tutorialspoint.com/python/bitwise_operators_example.htm

## & binary AND: operator copies a bit to the result if it exists in both operands.
# 7 & 7 = 7; 1 & 1 = 1

## | binary OR: It copies a bit if it exists in either operand

## ^ binary XOR:It copies the bit if it is set in one operand BUT NOT Both.
# Therefore, when both operands are the same number, it will always return 0 
# 1 ^ 1 = 0; 2^2 =0; 7^7 = 0

## << binary left shift: the left operands value is moved left by 
# the number of bits specified by the right operand.

## >> binar right shift.

# MySQL, the index is based on StorageEngine, different StorageEngine has different index supported.
# Even same index type in different StorageEngine, their implementation may be different.

## Index Model in InnoDB
# Table stored based on primary key as Index索引组织表
# InnoDB use B+ Tree as Index Model, therefore, all the data is stroed in DB

# create table T(
id int Primary key,
k in not null,
name varchar(16),
index(k)) engine=InnoDB;

## primary key => clustered index; common index=> secondary index
# all the data is stored based on primary key, therefore, the search has to find the primary key first, 
# and then search the primary key tree to find the result.
# PRIMARY KEY INDEX is a UNIQUE INDEX with a name "PRIMARY"
# ALTER TABLE students ADD PRIMARY KEY(sid)

# HASH
# Be not suitable for RangeQuery - only used on value equal and similar cases, say, memcache

# BST => too high => B+ => LSM 

## Create Index
# 1) Alter table: create common index/UNIQUE index/Primary key Index; seperate the column by comma; 
#    index_name is optional, MySQL will use the first column name as the index name by default;
#    ALTER TABLE table_name ADD INDEX index_name(column_list)
#    ALTER TABLE table_name ADD UNIQUE (column_list)
#    ALTER TABLE table_name ADD PRIMARY KEY (column_list)
# 2) CREATE INDEX: create common or UNIQUE index
#    CREATE INDEX index_name ON table_name (column_list)
#    CREATE UNIQUE INDEX index_name ON table_name(column_list)
# 3) DROP INDEX
#    DROP INDEX index_name ON table_name
#    ALTER TABLE table_name DROP INDEX index_name
#    ALTER TABLE table_name DROP PRIMARY KEY
# 
# SHOW INDEX from table_name;
# 




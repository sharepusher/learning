## Reference 
# https://stackoverflow.com/questions/36122668/how-to-sort-struct-with-multiple-sort-parameters

# Use the sort.Slice (available since Go 1.8) or the sort.Sort function to sort a slice of values.

The less function is specified using an anonymous function with sort.Slice:


var members []Member
sort.Slice(members, func(i, j int) bool {
    if members[i].LastName < members[j].LastName {
        return true
    }
    if members[i].LastName > members[j].LastName {
        return false
    }
    return members[i].FirstName < members[j].FirstName
})




family := []struct {
    Name string
    Age  int
}{
    {"Alice", 23},
    {"David", 2},
    {"Eve", 2},
    {"Bob", 25},
}

// Sort by age, keeping original order or equal elements.
sort.SliceStable(family, func(i, j int) bool {
    return family[i].Age < family[j].Age
})
fmt.Println(family) // [{David 2} {Eve 2} {Alice 23} {Bob 25}]





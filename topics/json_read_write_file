## Reference
http://gowrishankarnath.com/read-write-json-python/
https://stackoverflow.com/questions/12309269/how-do-i-write-json-data-to-a-file/12309296#12309296
https://www.safaribooksonline.com/library/view/python-cookbook-3rd/9781449357337/ch06s02.html


## Load data from json file
# Reading JSON data back from a file called JSONData.json
#Use the method json.load()
#It's just load and not loads()
#Decode JSON Data
with open('JSONData.json', 'r') as f:
     data = json.load(f)

## Write json data to json file
# Writing JSON data into a file called JSONData.json
#Use the method called json.dump()
#It's just dump() and not dumps()
#Encode JSON data
with open('JSONData.json', 'w') as f:
     json.dump(jsonData, f)

# write a prettified JSON file which human eyes can read better. 
# For this, pass sort_keys as True and indent with 4 space characters and you are good to go. 
# Also take care of ensuring that the ascii codes will not be written in your JSON file:

with open('data.txt', 'w') as outfile:
     json.dump(jsonData, outfile, sort_keys = True, indent = 4,
               ensure_ascii = False)


# To avoid storing an encoded copy of the data in memory (result of dumps) and to output utf8-encoded bytestrings in both Python 2 and 3, use:
import json, codecs
with open('data.txt', 'wb') as f:
    json.dump(data, codecs.getwriter('utf-8')(f), ensure_ascii=False)



## convert the dictionary to a string using json.dumps
import json
data = json.dumps(d)
print(type(data))
print(data)

<type 'str'>
{"electromagnetic": {"relative strength": "10^36", "range": "infinity", "mediator": "photons"}, "strong": {"relative strength": "10^38", "range": "10^-15", "mediator": "gluons"}, "weak": {"relative strength": "10^25", "range": "10^-18", "mediator": "W/Z bosons"}, "gravity": {"relative strength": "1", "range": "infinity", "mediator": "gravitons"}}

Note that the "json.dumps()" returns a string as indicated by the "s" at the end of "dumps". 
This process is called encoding.

## Solution 1, convert json to string by dumps first, and then write, read

import json
data = json.dumps(d)
with open("4forces.json","w") as f:
  f.write(data)

## Let's reads it back and decoding the JSON-encoded string back into a Python dictionary data structure:
# reads it back
with open("4forces.json","r") as f:
  data = f.read()

# decoding the JSON to dictionay
d = json.loads(data)


## Solution 2, dump or load json object directly to the file
If we prefer working with files instead of strings, we may want to use json.dump() / json.load() to encode / decode JSON data:
# write to a file
with open("4forces.json","w") as f:
  json.dump(d, f)

# reads it back
with open("4forces.json","r") as f:
  d = json.load(f)


